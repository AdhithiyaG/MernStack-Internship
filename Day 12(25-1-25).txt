const express = require("express")
const exhdb = require("express-handlebars")
const db = require('./db')
const exp = express()
const bodyParser = require('body-parser')
const empModel = require("./models/empModel")
const objid = db.objectId

db.getConnection()

exp.engine(
    'hbs',
    exhdb.engine({
        layoutsDir:'folder/',
        defaultLayout:'app',
        extname:'hbs',

        runtimeOptions:{
            allowProtoPropertiesByDefault:true,
            allowProtoMethodsByDefault:true
        }
    })
)

exp.set('view engine','hbs')
exp.set('views','folder')
exp.use(bodyParser.urlencoded({extended:true}))

exp.get('/',async (req,res)=>{
    let edit_id ,edit_stu,delete_id
    let msg =''
    let datas = await empModel.find({})
    console.log(datas)
    if(req.query.edit_idd){
        edit_id = req.query.edit_id
        edit_stu = await empModel.findOne({_id : edit_id})
    }
    if(req.query.delete_idd){
        delete_id = req.query.delete_idd
        console.log("Deleting request for:",delete_id)
        await collection.deleteOne({_id:new objid(delete_id)})
        res.redirect('/?status=3')
    }
    if(req.query.status === '1'){
        msg = 'inserted successfully'
    }
    else if(req.query.status === '2'){
        msg = "updated successfully"
    }
    else if(req.query.status === '3'){
        msg = "deleted successfully"
    }
    res.render('app',{msg,x:datas,edit_id,edit_stu})

})

// exp.post('/empinfo',async (req,res)=>{
//     const database = await db.getConnection()
//     const collection = database.collection('prac')
//     const employee = {name : req.body.name,rollNo: req.body.rollNo,age: req.body.age,details:{class:req.body.cls,Address:req.body.ads}}

//     await collection.insertOne(employee)

//     res.redirect('/?status=1')
// })
exp.post('/empinfo',(req,res)=>{
    const employee = {name : req.body.name , rollNo : req.body.rollNo}
    const newEmpDoc = new empModel(employee)
    newEmpDoc.save()
    res.redirect('/?status=1')
})
// exp.post('/updateinfo/:e_id',async(req,res)=>{
//     const database = await db.getConnection()
//     const collection = database.collection('prac')
//     const employee = {name : req.body.name,rollNo: req.body.rollNo,age: req.body.age,details:{class:req.body.cls,Address:req.body.ads}}

//     let ed_idd = req.params.e_id
//     await collection.updateOne({_id:new objid(ed_idd)},{$set:employee}) 

//     res.redirect('/?status=2')
// })
exp.listen(1000,()=>{console.log("Listening on port 1000")})
============================================
const mongse = require('mongoose')

async function getConnection(){
    mongse.connect('mongodb://localhost:27017/newone')
    .then(()=>{
        console.log("db connected")
    })
    .catch(()=>{
        console.log("db error")
    }
    )
}

module.exports = {getConnection}
==================================
<!DOCTYPE html>
<html>
    <head>
        <title>
            {--MongoCrud--}
        </title>-
    </head>
    <body>
        <h1>MongoCrud Example</h1>
        {{#if edit_id}}
        <h3>Edit form</h3>
         <form action="/updateinfo/{{edit_id}}" method="post">
            <label for="name">Emp Name:</label>
            <input type="text" name="name" value="{{edit_stu.name}}"/>
         
            <label for="rollNo">Emp RollNo:</label>
            <input type="text" name="rollNo"value="{{edit_stu.rollNo}}" />
          
            <input type="submit" />
        </form>
        {{else}}
         <h3>Create form</h3>
         <form action="/empinfo" method="post">
            <label for="name">Emp Name:</label>
            <input type="text" name="name" />
            <label for="rollNo">Emp RollNo:</label>
            <input type="text" name="rollNo" />
            <input type="submit" />
        </form>
        {{/if}}
        <p>{{msg}}</p>
        <ul>
            {{#each x}}
            <li>
                Name: {{this.name}} RollNo: {{this.rollNo}}
            <a href="/?edit_idd={{this._id}}">Edit</a>  <a href="/?delete_idd={{this._id}}"onclick="return confirm('Are you wnat to delete this field?')">Delete</a>
            </li>
            {{/each}}
        </ul>
    </body>
</html>
======================================
const mongose = require('mongoose')

const empSchema = new mongose.Schema({
    name : String,
    rollNo : Number
})

const empdl=mongose.model('empmdle',empSchema)
module.exports = empdl

